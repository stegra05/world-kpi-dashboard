"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/components/MapChart.tsx":
/*!*************************************!*\
  !*** ./src/components/MapChart.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_simple_maps__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-simple-maps */ \"./node_modules/react-simple-maps/dist/index.umd.js\");\n/* harmony import */ var react_simple_maps__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_simple_maps__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_tooltip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-tooltip */ \"./node_modules/react-tooltip/dist/react-tooltip.min.mjs\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-scale */ \"./node_modules/d3-scale/src/index.js\");\n/* harmony import */ var _utils_dataParser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/dataParser */ \"./src/utils/dataParser.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n// World geography data - Alternative source if GitHub is not accessible\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json\";\n// Color scale for the map\nconst colorScale = [\n    \"#eff3ff\",\n    \"#c6dbef\",\n    \"#9ecae1\",\n    \"#6baed6\",\n    \"#4292c6\",\n    \"#2171b5\",\n    \"#084594\"\n];\nconst MapChart = (param)=>{\n    let { data, selectedVariable, filters, onCountrySelect } = param;\n    _s();\n    const [tooltipContent, setTooltipContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [tooltipId, setTooltipId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // Track which element is being hovered\n    const [mapError, setMapError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const loggedCountriesRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"MapChart rendered with \".concat(data.length, \" data points\"));\n        console.log(\"Selected variable: \".concat(selectedVariable));\n        console.log(\"Active filters:\", filters);\n        // Debug: Check first 5 data items\n        if (data.length > 0) {\n            console.log(\"First 5 data items:\", data.slice(0, 5));\n            // Debug: Check if any data has the selected variable\n            const matchingVariableData = data.filter((item)=>item.variable === selectedVariable);\n            console.log(\"Items matching variable \".concat(selectedVariable, \":\"), matchingVariableData.length);\n            if (matchingVariableData.length > 0) {\n                console.log(\"First 5 matching items:\", matchingVariableData.slice(0, 5));\n            }\n        }\n    }, [\n        data,\n        selectedVariable,\n        filters\n    ]);\n    // Debug: Fetch and inspect the GeoJSON data structure\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchGeoData = async ()=>{\n            try {\n                console.log(\"Fetching geo data from:\", geoUrl);\n                const response = await fetch(geoUrl);\n                if (!response.ok) {\n                    console.error(\"Failed to fetch geo data:\", response.status);\n                    return;\n                }\n                const geoData = await response.json();\n                console.log(\"GeoJSON structure:\", geoData);\n                // Check the first feature to see its structure\n                if (geoData.features && geoData.features.length > 0) {\n                    console.log(\"First geo feature:\", geoData.features[0]);\n                    console.log(\"Sample properties:\", geoData.features[0].properties);\n                    // Check if we have the properties we expect\n                    const sampleProps = geoData.features[0].properties;\n                    console.log(\"Has NAME property:\", \"NAME\" in sampleProps);\n                    console.log(\"Has ISO_A3 property:\", \"ISO_A3\" in sampleProps);\n                    console.log(\"Property names:\", Object.keys(sampleProps));\n                }\n            } catch (error) {\n                console.error(\"Error inspecting geo data:\", error);\n            }\n        };\n        fetchGeoData();\n    }, []);\n    // Aggregate data by country for the selected variable and filters\n    const countryData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const aggregatedData = (0,_utils_dataParser__WEBPACK_IMPORTED_MODULE_4__.getAggregatedDataByCountry)(data, selectedVariable, {\n            battAlias: filters.battAlias || undefined,\n            continent: filters.continent || undefined,\n            climate: filters.climate || undefined,\n            model_series: filters.model_series || undefined\n        });\n        // Log some info about the country data\n        console.log(\"Country data:\", aggregatedData);\n        console.log(\"Country data countries:\", Object.keys(aggregatedData));\n        console.log(\"Country data has entries:\", Object.keys(aggregatedData).length > 0);\n        return aggregatedData;\n    }, [\n        data,\n        selectedVariable,\n        filters\n    ]);\n    // Check if we have any data after filtering\n    const hasData = Object.keys(countryData).length > 0;\n    // Create a color scale based on the data range\n    const colorScaleFunction = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        try {\n            if (!hasData) {\n                return ()=>\"#F5F5F5\"; // Default color when no data\n            }\n            const { min, max } = (0,_utils_dataParser__WEBPACK_IMPORTED_MODULE_4__.getMinMaxValues)(countryData);\n            console.log(\"Data range: min=\".concat(min, \", max=\").concat(max));\n            // Using scaleQuantile for better distribution across non-uniformly distributed data\n            return (0,d3_scale__WEBPACK_IMPORTED_MODULE_5__.scaleQuantile)().domain([\n                min,\n                max\n            ]).range(colorScale);\n        } catch (error) {\n            console.error(\"Error creating color scale:\", error);\n            setMapError(\"Error creating color scale\");\n            return ()=>\"#F5F5F5\"; // Default color function\n        }\n    }, [\n        countryData,\n        hasData\n    ]);\n    const handleMouseEnter = (geo)=>{\n        try {\n            // Debug the entire geo object to see what properties are actually available\n            console.log(\"Geo object:\", geo);\n            console.log(\"Geo properties:\", geo.properties);\n            // The property names might be different from what we expect\n            // Try to access name and ISO code regardless of case\n            const name = geo.properties.NAME || geo.properties.name;\n            const isoCode = geo.properties.ISO_A3 || geo.properties.iso_a3;\n            // Create a standardized country code for lookup\n            const countryCode = isoCode ? isoCode.toUpperCase() : \"\";\n            console.log(\"Hovering over: \".concat(name || \"Unknown\", \" (\").concat(countryCode || \"No ISO code\", \")\"));\n            // Check if we have data for this country\n            const hasCountryData = countryCode && countryCode in countryData;\n            console.log(\"Data for \".concat(countryCode, \" exists: \").concat(hasCountryData));\n            // Get the value, or 0 if no data\n            const value = hasCountryData ? countryData[countryCode] : 0;\n            // Format the tooltip based on whether we have data\n            if (hasCountryData) {\n                setTooltipContent(\"\".concat(name || \"Unknown\", \": \").concat(value.toLocaleString()));\n            } else {\n                setTooltipContent(\"\".concat(name || \"Unknown\", \": No data available\"));\n            }\n            setTooltipId(geo.rsmKey);\n        } catch (error) {\n            console.error(\"Error on mouse enter:\", error);\n        }\n    };\n    const handleMouseLeave = ()=>{\n        setTooltipContent(\"\");\n        setTooltipId(\"\");\n    };\n    const handleCountryClick = (geo)=>{\n        try {\n            // Get the ISO code, trying different property names for compatibility\n            const isoCode = geo.properties.ISO_A3 || geo.properties.iso_a3;\n            const countryCode = isoCode ? isoCode.toUpperCase() : \"\";\n            // Only call onCountrySelect if we have data for this country\n            if (countryCode && countryCode in countryData) {\n                onCountrySelect(countryCode);\n            }\n        } catch (error) {\n            console.error(\"Error on country click:\", error);\n        }\n    };\n    if (mapError) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-red-500 text-center p-4\",\n            children: mapError\n        }, void 0, false, {\n            fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n            lineNumber: 210,\n            columnNumber: 12\n        }, undefined);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_tooltip__WEBPACK_IMPORTED_MODULE_3__.Tooltip, {\n                id: \"map-tooltip\",\n                place: \"top\",\n                render: ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: tooltipContent\n                    }, void 0, false, {\n                        fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                        lineNumber: 218,\n                        columnNumber: 23\n                    }, void 0)\n            }, void 0, false, {\n                fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                lineNumber: 215,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_simple_maps__WEBPACK_IMPORTED_MODULE_2__.ComposableMap, {\n                projection: \"geoMercator\",\n                projectionConfig: {\n                    scale: 150,\n                    center: [\n                        0,\n                        30\n                    ]\n                },\n                height: 500,\n                width: 900,\n                style: {\n                    width: \"100%\",\n                    height: \"auto\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_simple_maps__WEBPACK_IMPORTED_MODULE_2__.ZoomableGroup, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_simple_maps__WEBPACK_IMPORTED_MODULE_2__.Geographies, {\n                        geography: geoUrl,\n                        children: (param)=>{\n                            let { geographies } = param;\n                            return geographies.map((geo)=>{\n                                try {\n                                    // Get the ISO code, trying different property names for compatibility\n                                    const isoCode = geo.properties.ISO_A3 || geo.properties.iso_a3;\n                                    const countryCode = isoCode ? isoCode.toUpperCase() : \"\";\n                                    // Get country name for debugging\n                                    const countryName = geo.properties.NAME || geo.properties.name || \"Unknown\";\n                                    // Debug the first few countries to see if we're getting the right data\n                                    if (countryCode && !loggedCountriesRef.current) {\n                                        console.log(\"Sample country from map: \".concat(countryName, \" (\").concat(countryCode, \")\"));\n                                        loggedCountriesRef.current = true;\n                                    }\n                                    // Check if we have data for this country\n                                    const hasData = countryCode && countryCode in countryData;\n                                    const value = hasData ? countryData[countryCode] : 0;\n                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_simple_maps__WEBPACK_IMPORTED_MODULE_2__.Geography, {\n                                        geography: geo,\n                                        fill: value ? colorScaleFunction(value) : \"#F5F5F5\",\n                                        stroke: \"#D6D6DA\",\n                                        strokeWidth: 0.5,\n                                        style: {\n                                            default: {\n                                                outline: \"none\"\n                                            },\n                                            hover: {\n                                                outline: \"none\",\n                                                fill: \"#F53\"\n                                            },\n                                            pressed: {\n                                                outline: \"none\"\n                                            }\n                                        },\n                                        \"data-tooltip-id\": \"map-tooltip\",\n                                        onMouseEnter: ()=>handleMouseEnter(geo),\n                                        onMouseLeave: handleMouseLeave,\n                                        onClick: ()=>handleCountryClick(geo),\n                                        className: value ? \"cursor-pointer\" : \"cursor-default\"\n                                    }, geo.rsmKey, false, {\n                                        fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                                        lineNumber: 253,\n                                        columnNumber: 21\n                                    }, undefined);\n                                } catch (error) {\n                                    console.error(\"Error rendering geography:\", error);\n                                    return null;\n                                }\n                            });\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                        lineNumber: 231,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                    lineNumber: 230,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                lineNumber: 220,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 mb-2 text-center text-sm\",\n                children: hasData ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-gray-700\",\n                    children: [\n                        \"Showing data for \",\n                        filters.variable,\n                        filters.battAlias ? \", Battery: \".concat(filters.battAlias) : \"\",\n                        filters.continent ? \", Continent: \".concat(filters.continent) : \"\",\n                        filters.climate ? \", Climate: \".concat(filters.climate) : \"\",\n                        filters.model_series ? \", Model: \".concat(filters.model_series) : \"\"\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                    lineNumber: 284,\n                    columnNumber: 11\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-amber-600\",\n                    children: \"No data matches the current filter criteria. Try adjusting your filters.\"\n                }, void 0, false, {\n                    fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                    lineNumber: 292,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                lineNumber: 282,\n                columnNumber: 7\n            }, undefined),\n            hasData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"mr-2 text-sm\",\n                            children: \"Low\"\n                        }, void 0, false, {\n                            fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                            lineNumber: 300,\n                            columnNumber: 13\n                        }, undefined),\n                        colorScale.map((color, i)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                style: {\n                                    backgroundColor: color,\n                                    width: \"20px\",\n                                    height: \"20px\"\n                                }\n                            }, i, false, {\n                                fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                                lineNumber: 302,\n                                columnNumber: 15\n                            }, undefined)),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"ml-2 text-sm\",\n                            children: \"High\"\n                        }, void 0, false, {\n                            fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                            lineNumber: 311,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                    lineNumber: 299,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n                lineNumber: 298,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/stef/Documents/Programmieren/world-kpi-dashboard/src/components/MapChart.tsx\",\n        lineNumber: 214,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MapChart, \"RMUoiT1N+Bajnxp5mOemqNmXheg=\");\n_c = MapChart;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MapChart);\nvar _c;\n$RefreshReg$(_c, \"MapChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/MapChart.tsx\n"));

/***/ })

});